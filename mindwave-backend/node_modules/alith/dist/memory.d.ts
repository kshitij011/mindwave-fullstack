import { Message } from "./internal";
declare class MessageBuilder {
    static newHumanMessage(content: string): Message;
    static newSystemMessage(content: string): Message;
    static newToolMessage(content: string): Message;
    static newAIMessage(content: string): Message;
    static messagesFromValue(value: string | object | object[]): Message[];
    static messagesToString(messages: Message[]): string;
}
interface Memory {
    messages(): Message[];
    addUserMessage(message: string): void;
    addAIMessage(message: string): void;
    addMessage(message: Message): void;
    clear(): void;
    toString(): string;
}
declare class WindowBufferMemory implements Memory {
    private windowSize;
    private storage;
    constructor(windowSize?: number);
    messages(): Message[];
    addUserMessage(message: string): void;
    addAIMessage(message: string): void;
    addMessage(message: Message): void;
    clear(): void;
    toString(): string;
}
export { type Memory, Message, MessageBuilder, WindowBufferMemory };
