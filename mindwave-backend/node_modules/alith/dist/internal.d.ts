/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface DelegateTool {
  name: string;
  version: string;
  description: string;
  parameters: string;
  author: string;
  handler: (...args: any[]) => any;
}
/**
 * Runs the text chunker on the incoming text and returns the chunks as a vector of strings.
 *
 * * `text` - The natural language text to chunk.
 * * `max_chunk_token_size` - The maxium token sized to be chunked to. Inclusive.
 * * `overlap_percent` - The percentage of overlap between chunks. Default is None.
 */
export declare function chunkText(
  text: string,
  maxChunkTokenSize?: number | undefined | null,
  overlapPercent?: number | undefined | null
): Array<string>;
export interface Message {
  /** "system", "user", "assistant" or "tool". */
  role: string;
  content: string;
}
export declare class DelegateAgent {
  model: string;
  name: string;
  apiKey: string;
  baseUrl: string;
  preamble: string;
  mcpConfigPath: string;
  extraHeaders: Record<string, string>;
  constructor(
    name: string,
    model: string,
    apiKey: string,
    baseUrl: string,
    preamble: string,
    mcpConfigPath: string,
    extraHeaders: Record<string, string>
  );
  promptWithTools(
    prompt: string,
    history: Array<Message>,
    delegateTools: Array<DelegateTool>
  ): string;
  prompt(prompt: string): string;
  chat(prompt: string, history: Array<Message>): string;
}
