"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteModelEmbeddings = void 0;
const axios_1 = __importDefault(require("axios"));
class RemoteModelEmbeddings {
    constructor(model, apiKey, baseUrl, port) {
        this.model = model;
        this.apiKey = apiKey;
        this.baseUrl = baseUrl;
        this.port = port;
    }
    async embedTexts(texts) {
        let url;
        if (this.baseUrl.startsWith("http")) {
            url = this.port
                ? `${this.baseUrl}:${this.port}/embeddings`
                : `${this.baseUrl}/embeddings`;
        }
        else {
            url = `https://${this.baseUrl}/embeddings`;
        }
        const headers = {
            Authorization: `Bearer ${this.apiKey}`,
            "Content-Type": "application/json",
        };
        const payload = {
            input: texts,
            model: this.model,
        };
        try {
            const response = await axios_1.default.post(url, payload, { headers });
            if (response.status === 200) {
                const responseDatas = response.data.data || [];
                const embeddings = responseDatas.map((data) => data.embedding || []);
                return embeddings;
            }
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        catch (error) {
            throw new Error(`Error fetching embeddings: ${error}`);
        }
    }
}
exports.RemoteModelEmbeddings = RemoteModelEmbeddings;
