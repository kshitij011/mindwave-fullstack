import { type DataStorage, type FileMetadata, type GetShareLinkOptions, StorageType, type UploadOptions } from "./interfaces";
export declare const IPFS_LINK: string;
export declare const IPFS_DWEB_LINK: string;
export declare const IPFS_W3S_LINK: string;
export declare const IPFS_TRUSTLESS_GATEWAY_LINK: string;
export declare const IPFS_4EVERLAND_LINK: string;
export declare const IPFS_PINATA_CLOUD_LINK: string;
export declare const IPFS_NFT_STORAGE_LINK: string;
export declare const IPFS_GATEWAY_ENV: string;
export declare const IPFS_API_KEY_ENV: string;
export declare const IPFS_API_SECRET_ENV: string;
export declare const IPFS_JWT_ENV: string;
export declare class PinataFileDetails {
    acceptDuplicates: boolean;
    isDuplicate: boolean | null;
    id: string;
    userId: string;
    name: string;
    cid: string;
    size: number;
    numberOfFiles: number;
    mimeType: string;
    groupId: string | null;
    createdAt: string;
    updatedAt: string;
    network: string;
    streamable: boolean;
    vectorized: boolean;
    constructor();
}
export declare class PinataUploadResponse {
    data: PinataFileDetails;
    constructor();
}
export declare class PinataIPFS implements DataStorage {
    static new(): PinataIPFS;
    upload(opts: UploadOptions): Promise<FileMetadata>;
    getShareLink(opts: GetShareLinkOptions): Promise<string>;
    storageType(): StorageType;
}
