import { Mutex } from "async-mutex";
import { Web3, type Web3Account } from "web3";
export declare const DEVNET_NETWORK = "LazAI Devnet";
export declare const TESTNET_NETWORK = "LazAI Testnet";
export declare const LOCAL_CHAIN_ENDPOINT = "http://localhost:8545";
export declare const TESTNET_ENDPOINT = "https://lazai-testnet.metisdevops.link";
export declare const TESTNET_CHAINID = 133718;
export declare class ChainConfig {
    network: string;
    endpoint: string;
    chainId: number;
    gasMultiplier: number;
    maxRetries: number;
    constructor(network: string, endpoint: string, chainId: number);
    static local(): ChainConfig;
    static testnet(): ChainConfig;
}
export declare class ChainManager {
    config: ChainConfig;
    web3: Web3;
    account: Web3Account;
    nonceMutex: Mutex;
    constructor(config?: ChainConfig, privateKey?: string);
    getCurrentBlock(): Promise<bigint>;
    getBalance(address?: string): Promise<bigint>;
    getNonce(address?: string): Promise<bigint>;
    getGasPrice(): Promise<bigint>;
    sendTransaction(contractMethod: any, to: string, value?: number | string, maxRetries?: number): Promise<{
        transactionHash: import("web3").Bytes;
        receipt: import("web3").TransactionReceipt;
    }>;
}
